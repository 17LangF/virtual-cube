<GENERAL>
For more information on a specific function, type HELP function.
Functions are not case-sensitive.

HELP          Returns help page.
RESET         Resets cube and sets cube size.
SCRAMBLE      Resets and scrambles cube.
MOVE          Turns cube.
SHOW          Shows cube.
EXIT          Exits program.

UNDO          Reverses last move or last number of moves.
REVERSE       Returns reversed list of moves.
REPEAT        Repeats moves until solved or when the limit is reached.
COMMUTATOR    Does a commutator [A, B] or A B A' B'.
CONJUGATE     Does a conjugate [A: B] or A B A'.
SIMPLIFY      Simplify moves to be as simple as possible.
INVERT        Goes to the inverse scramble and reverses moves.
ORIENT        Returns moves to orient cube with U on top, F on front.

INPUT         Input the state of your cube.
LINK          Returns an alg.cubing.net link for the cube.
MOVECOUNT     Returns current move count.
SPEEDSOLVE    Solve the cube as fast as you can and gives statistics on solve.
SOLVE         Computer tries to solve the cube.

NOTATION      Explains cube notation.
METRICS       Explains different turn metrics.

CUBE          Returns the cube state as an array.
SIZE          Returns cube size.
MOVES         Returns moves.
SMOVES        Returns scramble moves.
SHOWSTYLE     Returns current show style.
COLOURS       Returns colour scheme in RGB.
</GENERAL>

<HELP>
HELP function

Returns help page for a specific function.
</HELP>

<RESET>
RESET size
(Default size='ALL').

Resets cube and sets cube size.

The cube state, moves, and smoves are reset.
If size = 'ALL', then all attributes are reset.

Some functions may become very slow if the cube is too large.
</RESET>

<SCRAMBLE>
SCRAMBLE scramble
(Default scramble='MOVES').

Resets cube and scrambles cube with particular scramble or method.

Scramble methods include:
MOVES length - Random moves scrambler. (Default lengths are shown below).
STATE - Random state scrambler. Only available for 1x1 and 2x2 currently.

Or enter scramble after the keyword SCRAMBLE to follow the inputted scramble.

Default scramble lengths for random moves:
0x0 - 25
1x1 - 25
2x2 - 15
3x3 - 25
4x4 - 40
5x5 - 60
6x6 - 80
7x7 - 100

In general, an nxn cube larger than a 3x3 has scramble length 20*(n-2).
</SCRAMBLE>

<MOVE>
MOVE move

Turns cube (use NOTATION for an explanation of cube notation).
</MOVE>

<SHOW>
SHOW *args

Shows cube.

SHOW OFF - turns off show function.
SHOW ON - turns on show function.

SHOW 3D - uses Python Turtle to display a 3D drawing of the cube.
SHOW 2D - prints cube in the terminal as a 2D net.

In 3D mode:
SHOW xr yr zc zoom
(Default xr=45, yr=28, zc=0.1, zoom=200, pensize=8).

xr - the angle of rotation about the x axis in degrees. -45 <= xr <= 45.
yr - the angle of rotation about the y axis in degrees. -45 <= yr <= 45.
zc - the size difference between close and far points. -1 <= zc <= 1.
zoom - how much larger the picture is drawn. Negative inverts drawing.
pensize - thickness of the blacklines. Default is abs(zoom) / (5 * size + 10).

Clicking on the drawing moves the drawing around so that the F face moves
towards the mouse.

In 2D mode:
SHOW sticker colour_code spaces
(Default sticker='██', colour_code='fg,colour', spaces=True).

If sticker is 'letters', then the stickers will be shown with letters.
Use 'block' for two block characters ██.

If spaces is True, then the face will be separated.

If arguments are not given then the last used arguments will be used.

Colour codes:
colour - Colour of sticker in R,G,B
fg - Foreground colour (38, 2) followed by colour in R,G,B.
bg - Background colour (48, 2) followed by colour in R,G,B.
0 - No colour
4 - Underline

Colour codes are separated with commas.
</SHOW>

<EXIT>
EXIT

Exits program.
</EXIT>

<UNDO>
UNDO number
(Default number=1).

Reverses last move or last number of moves.
If number is 'ALL' then all moves are reversed.
</UNDO>

<REVERSE>
REVERSE moves
(Default moves are current excecuted moves).

Returns reversed list of moves.
</REVERSE>

<REPEAT>
REPEAT moves limit
(Default limit=1000).

Repeats moves until solved or when the limit is reached.
</REPEAT>

<COMMUTATOR>
COMMUTATOR [A, B]

Does a commutator [A, B] or A B A' B'.

This does move set A, then B, then the inverse of A, then the inverse of B.
</COMMUTATOR>

<CONJUGATE>
CONJUGATE [A: B]

Does a conjugate [A: B] or A B A'.

This does move set A, then B, then the inverse of A.
</CONJUGATE>

<SIMPLIFY>
SIMPLIFY move_types
(Default move_types=ALL).

Simplifies moves by cancelling moves where possible and more if desired.

Move types:
CANCEL - cancels adjacent moves where possible.
    e.g. U U becomes U2, Uw Uw2 becomes Uw'.
PARALLEL - cancels moves which are parallel.
    e.g. L R L becomes L2 R, L Lw L becomes L2 Lw.
WIDE - removes wide moves and reduce the depth of turns where possible.
    e.g. on 3x3, Rw becomes L x. On 5x5, 3Rw becomes Lw x.
SLICE - removes slice moves.
    e.g. on 3x3, M becomes L' Lw. On 5x5, 2-3Rw becomes R' 3Rw.
ROTATION - moves all rotations to the end and simplifies them.
    e.g. x U becomes F x, x2 y2 becomes z2.
ALL - combines all of the above.

Move types can be combined, so to remove wide and slice moves:
SIMPLIFY WIDE SLICE
</SIMPLIFY>

<INVERT>
INVERT

Goes to the inverse scramble and reverses moves.

Scramble moves become the inverse of the current moves.
Current moves become the inverse of the scramble moves.
</INVERT>

<ORIENT>
ORIENT

Returns moves to orient cube with U on top, F on front.

On odd layered cubes, the cube is rotated so the white (U) centre is on top,
and the green (F) centre is on front.

On even layered cubes, the cube is rotated so the yellow, blue, orange (DBL)
corner is in the DBL location, with yellow (D) on bottom.
</ORIENT>

<INPUT>
INPUT state

Input the state of your cube.

Enter the colours of your cube starting from the U face, followed by the L, F,
R, B, and D faces, from top to bottom, left to right.

This may cause problems with some other functions.
</INPUT>

<LINK>
LINK

Returns an alg.cubing.net link for the cube.

Size must be from 1x1 to 17x17 to be supported by alg.cubing.net.
</LINK>

<MOVECOUNT>
MOVECOUNT metric
(Default metric=OVERVIEW).

Returns current move count in a specific turn metric (use help METRICS for an
explanation of different turn metrics).

MOVECOUNT ALL - Returns movecount in all metrics.
MOVECOUNT OVERVIEW - Returns movecount in HTM, QTM, STM, and ETM.
</MOVECOUNT>

<SPEEDSOLVE>
SPEEDSOLVE

Solve the cube as fast as you can and gives statistics on solve.

The cube is scrambled in the default method, and will start timing once the
first turn is made, or once 15 seconds (inspection) is reached.

Enter moves to solve the cube. Other functions include:

EXIT - Ends solve.
TIME - Returns current solving time.

Solve times are shown in the format days:minutes:hours:seconds.milliseconds.
Leading 0s are removed.

Statistics include:
TIME
MOVECOUNT (in HTM, QTM, STM, and ETM).
TPS - Turns per second, calculated using ETM.
START TIME - Time the cube is first seen.
END TIME - Time solve is ended.
</SPEEDSOLVE>

<SOLVE>
SOLVE method
(Default method is the first method for the specific cube size below).

Computer tries to solve cube with a particular method.

Press ENTER to step through the solve. Other functions include:

EXIT - skips to the end of the solve.
PLAY TPS (Default TPS='AUTO') - Plays through the solve at a certain TPS
    (turns per second). If TPS = 0, the cube is moved at the maximum speed.

Statistics include:
MOVECOUNT (in HTM, QTM, STM, and ETM).
TIME - Time the computer took to find a solution to the nearest microsecond.

Some methods of solving include additional statistics, listed below.

Methods for different cube sizes:
0x0 - None

1x1 - None

2x2 - OPTIMAL
    Solves cube in the fewest moves (HTM). Solutions are 3-gen, so only use U,
    F, and R moves.

2x2 - OLD POCHMANN or OP
    Solves cube using setup moves and swaps. Piece swaps use the Speffz
    lettering scheme. Corners are solved using the Y-permutation, with buffer
    at A. Additional statistics are OP CORNERS.

3x3 - BEGINNERS
    Solves cube using the beginners method shown in my YouTube tutorial at
    https://www.youtube.com/playlist?list=PLK2USJVFiYlPh9ZGiMBE3Qd4fzomnM0Qw.

    Additional statistics are:
    CROSS
    FIRST LAYER
    SECOND LAYER
    LAST LAYER CROSS
    LAST LAYER FACE
    LAST LAYER CORNERS
    LAST LAYER EDGES

3x3 - OLD POCHMANN or OP
    Solves cube using setup moves and swaps. Piece swaps use the Speffz
    lettering scheme. Edges are solved using the T-permutation, with buffer at
    B. Parity is solved using the Ra-permutation. Corners are solved using the
    Y-permutation, with buffer at A. Additional statistics are OP EDGES,
    PARITY, and OP CORNERS.

3x3 Substeps:
    CROSS
    FIRST LAYER
    SECOND LAYER
    LAST LAYER CROSS
    LAST LAYER FACE
    LAST LAYER CORNERS
    OP CORNERS
    OP EDGES

4x4+ - CAGE
    Solves cube by solving edges first and uses commutators to solve centres.
    Additional statistics are the number of moves in ETM for each centre.

4x4+ Substeps:
    CENTRES
</SOLVE>

<NOTATION>
NOTATION

Possible moves

Face turns
U - Up
L - Left
F - Front
R - Right
B - Back
D - Down

Add a number to say how many times to turn that layer clockwise, e.g. U2.
Add a prime symbol to make the layer turn anticlockwise, e.g. U'.

Wide moves
Add the letter 'w' to a face turn to turn 2 layers at once, e.g. Uw.
Alternatively, using a lowercase letter also turns 2 layers at once, e.g. u.

Add a number in front of the face turn to specify the number of layers to
turn, e.g. 3Uw or 3u.

Wide block moves
Specify the start and end move depth separated by a hyphen in front of the
wide face turn. e.g. 2-3Uw or 2-3u.

Slice moves
M - Middle (follows L)
E - Equator (follows D)
S - Slice (follows F)

On big cubes, a capital slice move turns only the central layer,
and a lowercase slice move turns everything but the two outer layers.

To turn a specific layer, add a number in front of a face turn, e.g. 2U.

Rotations
x (follows R)
y (follows U)
z (follows F)

These turn the whole cube.
</NOTATION>

<METRICS>
Metrics

HTM - Half Turn Metric
In HTM, a move can any outer turn.
So U is 1HTM, U2 is 1HTM, M is 2HTM, M2 is 2HTM, and x is 0HTM.

QTM - Quarter Turn Metric
In QTM, a move must be an outer quarter turn.
So U is 1QTM, U2 is 2QTM, M is 2QTM, M2 is 4QTM, and x is 0QTM.

STM - Slice Turn Metric
In STM, a move can be any outer turn, or a slice move.
So U is 1STM, U2 is 1STM, M is 1STM, M2 is 1STM, and x is 0STM.

ETM - Execution Turn Metric
In ETM, a move can be any outer turn, slice move, and rotations count are
counted.
So U is 1ETM, U2 is 1ETM, M is 1ETM, M2 is 1ETM, and x is 1ETM.

QSTM - Qurater Slice Turn Metric
In QTSM, a move can be an outer quater turn, or quarter slice move.
So U is 1QSTM, U2 is 2QTSM, M is 1QTSM, M2 is 2QTSM, and x is 0QTSM.

ATM - Axis Turn Metric
In ATM, a move can be any turn within the same axis.
So U is 1ATM, U2 is 1ATM, M is 1ATM, M2 is 1ATM, x is 0ATM and L R is 1ATM.

OBTM - Outer Block Turn Metric
Same as HTM and is the official turn metric of the WCA.

BTM - Block Turn Metric
Same as STM.
</METRICS>

<CUBE>
CUBE

Returns the cube state as an array.
</CUBE>

<SIZE>
SIZE

Returns cube size.
</SIZE>

<MOVES>
MOVES

Returns moves.
</MOVES>

<SMOVES>
SMOVES

Returns scramble moves.
</SMOVES>

<SHOWSTYLE>
SHOWSTYLE

Returns current show style.
</SHOWSTYLE>

<COLOURS>
COLOURS

Returns colour scheme in RGB.
</COLOURS>
